输入：
    (1)FR,n,UP/DOWN,t
       楼层请求：FR为标识，
                 n为所在楼层的楼层号，
                 UP表向上，DOWN表向下，
                 t为请求产生的相对时刻。
    (2)ER,n,t
       电梯内请求：ER为标识，
                   n为目标楼层号，
                   t为请求产生的相对时刻。
    注：命令行输入为【按照请求产生时间排序】的请求序列；
        假设电梯运行一个楼层距离消耗时间为0.5，停靠、开关门等一系列动作消耗时间为1；
        固定为10层楼，1层只有向下请求按钮，10层只有向下请求按钮，其他有向上和向下两个请求按钮；
        电梯内部只有楼层号对应的按钮；
        请求的产生时间为【非负整数】；
        每一条请求占一行【程序自动忽略空格】直至在末尾行输入"END"表请求结束；
        若在一行内单独输入【空请求()】，则该行请求认定为无效；
        若在一行内输入多条请求【包括空请求】，则该行的所有请求均无效；
        程序运行开始时设置电梯停靠在一层；
        约定有效的第一条请求应为2层及以上楼层请求【若为电梯内请求或1层楼层请求就认定为无效】。
输出：
    n,UP/DOWN,t
    电梯调度操作：n为电梯所在楼层号，
                  UP/DOWN为电梯运行方向，
                  t为电梯调度开始时间。
    注：输出按照时间排序；
        如果发现输入不符合规范格式【标识区分大小写】或不满足时间排序要求，输出"Invalid request！"；
        请求数据无效时进行下一条请求的调度处理；
        电梯调度开始时间为【非负浮点数】；
        当连续输入目标楼层为同一楼层的请求时响应第一次有效请求【并提示输出其余为无效请求】；
        每行输出为对应行输入的请求的判断及调度处；
        
        当目标楼层为所在楼层时，认定为无效请求，输出"Invalid request！"。

测试样例：
    输入：(FR,2,UP,1)
          (ER,3,2)
          (FR,5,DOWN,8)
          (ER,1,12)
          END
    输出：(2,UP,2.5)
          Invalid request!
          (5,UP,10.5)
          (1,DOWN,15.0)
    说明：时刻为1时，2层提出上行请求，电梯需先从1层上行至2层；
          （电梯完成该次调度历时(1+0.5)，到达2层的时刻为2.5）
          又电梯内请求的产生时间为2（早于2.5），不满足时间排序要求，故请求无效；
          时刻为8（晚于2.5）时，5层提出下行请求，电梯需从2层上行至5层；
          （电梯完成此调度历时(1+0.5*3)，到达5层的时刻为10.5）
          又电梯内请求的产生时间为12（晚于10.5），可以调度，电梯需从5层下行至1层；
          （电梯完成该次调度历时(1+0.5*4)，到达1层的时刻为15.0）
          "END"出现，请求停止。